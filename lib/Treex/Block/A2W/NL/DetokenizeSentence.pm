package Treex::Block::A2W::NL::DetokenizeSentence;
use utf8;
use Moose;
use Treex::Core::Common;
extends 'Treex::Core::Block';

sub process_zone {
    my ( $self, $zone ) = @_;
    my $sentence = $zone->sentence() // '';

    # normalizing quotation marks (beware of double backticks)
    $sentence =~ s/``([^`']*)''/„$1”/g; 

    # removing spaces around punctuation
    $sentence =~ s/ ([,.?:;!])/$1/g;
    $sentence =~ s/„ /„/g;
    $sentence =~ s/ ”/”/g;
    $sentence =~ s/`` ([^`]*) ``/``$1``/g;
    $sentence =~ s/([,.?:;!]) ([”"])/$1$2/g;

    # hacks around weird punctuation order
    $sentence =~ s/([-"„;:,]),/$1/g;
    $sentence =~ s/,?\(,? ?/\(/g;
    $sentence =~ s/ ?,? ?\)/\)/g;

    # (The whole sentence is in parenthesis).
    # (The whole sentence is in parenthesis.)
    if ( $sentence =~ /^\(/ ) {
        $sentence =~ s/\)\./.)/;
    }
    
    # Removing excessive parentheses generated by Alpino
    $sentence =~ s/\(([‘'>“”„`-])\)/$1/g;
    
    # Removing excessive quotes (the content of which has probably gone missing in the Analysis)
    $sentence =~ s/„”//g;

    $zone->set_sentence($sentence);
}

1;

__END__

=encoding utf-8

=head1 NAME 

Treex::Block::A2W::NL::DetokenizeSentence

=head1 DESCRIPTION

Rule-based removal of spaces around tokens in the generated sentence, normalization of
quotes.

Unlike L<Treex::Block::A2W::Detokenize>, this block expects that the C<sentence> attribute
of each zone is filled with the generated sentence.

=head1 AUTHORS

Martin Popel <popel@ufal.mff.cuni.cz>

Ondřej Dušek <odusek@ufal.mff.cuni.cz>

=head1 COPYRIGHT AND LICENSE

Copyright © 2015 by Institute of Formal and Applied Linguistics, Charles University in Prague

This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself.
