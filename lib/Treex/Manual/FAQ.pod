
=pod

=encoding utf-8

=head1 NAME

Treex::Manual::FAQ - Frequently asked questions about Treex

=head1 FREQUENTLY ASKED QUESTIONS

=head2 General

=head3 Is Treex (API, data formats,...) stable?

=head3 Is Treex platform independent?

=head3 Why should I use Treex and not other NLP frameworks such as GATE?

=head3 My application in Treex is slow. What shall I do?

=head3 I noticed that Treex require an on-line access to some data repository. Can Treex work off-line?

=head3 Why should I use Treex even if it does not support the language I am interested in?

=head3 I found a bug in Treex. What should I do?

write a minimal test, write the version....

=head3 I'd like to create a commercial application using some of Treex modules. Shall I expect any licensing troubles?

=head2 Installation

=head2 Using Treex

=head3 How can I get parallel corpus to Treex?

Let's say you have English and French corpus, sentence aligned,
stored in plain text format, one sentence per line.

   Read::AlignedSentences en=sample_en.txt fr=sample_fr.txt

=head2 Contributing to Treex

=head3 Can I add new attributes to nodes?

For the "official" attributes, there are accessor methods, so e.g. for I<lemma>:

  my $old_lemma = $anode->lemma;
  $node->set_lemma('new');

You can use methods C<get_attr> and C<set_attr> to access whatever attribute you want:  

  $node->set_attr('my_new_attribute', 'my_value');
  print $node->get_attr('my_new_attribute'); # prints "my_value"

However, when saving the document (to *.treex), only attributes which are described
in treex PML schema (stored in C<treex/lib/Treex/Core/share/tred_extension/treex/resources>)
will be saved.

This means that you should not expect that a "non-schema" attribute
saved in one block will be accessible in another block
(it would work with both block in one scenario, but it wouldn't work
if saved in one and loaded in another scenario, which is hard to debug).

Note, that for temporary information you can also use a separate hash
variable as a preferred alternative to new attributes:

  my %my_new_attribute_of;
  $my_new_attribute_of{$node} = 'my_value';
 

=head1 AUTHOR

Zdeněk Žabokrtský <zabokrtsky@ufal.mff.cuni.cz>

Martin Popel <popel@ufal.mff.cuni.cz>

David Mareček <marecek@ufal.mff.cuni.cz>

=head1 COPYRIGHT AND LICENSE

Copyright © 2011 by Institute of Formal and Applied Linguistics, Charles University in Prague

This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself.

=cut
